Desafios de Código Básico C# - Pottencial
1 / 3 - Subtraindo o produto e a soma de um número inteiro

Desafio
Dado um número inteiro ( n ) , retorne a diferença entre o produto de seus dígitos e a soma de seus dígitos.

Entrada
A entrada consiste em um número inteiro ( n );

Saída
A saída consiste na multiplicação do produto dos dígitos ( n ), a soma de seus dígitos e a diferenção entre o produto e a soma, como no exemplo a baixo: 

Exemplo 1

Entrada	               Saída
234	                      15
Explicação: 

Produto de dígitos = 2 * 3 * 4 = 24

Soma dos dígitos = 2 + 3 + 4 = 9

Resultado = 24 - 9 = 15

Exemplo 2:

Entrada	                Saída
4421                       	21
Explicação: 

Produto de dígitos = 4 * 4 * 2 * 1 = 32

Soma dos dígitos = 4 + 4 + 2 + 1 = 11

Resultado = 32 - 11 = 21

Restrições:

1 <= n <= 10^5


Código 
using System;

class DIO {
        
static void Main(string[] args){

        int n = int.Parse(Console.ReadLine());
        int p = 1, s = 0;
        while (n > 0){
             int l = n % 10;
// TODO: Crie as outras condições necessárias para a resolução do desafio:
             p *= l;
             s += l     ;
             n /=  10    ;
           }

           Console.WriteLine(p-s);
        }
    }




Desafios de Código Básico C# - Pottencial
2 / 3 - Encaixa ou Não?

Desafio
Paulinho tem em suas mãos um novo problema. Agora a sua professora lhe pediu que construísse um programa para verificar, à partir de dois valores muito grandes A e B, se B corresponde aos últimos dígitos de A.

Entrada
A entrada consiste de vários casos de teste. A primeira linha de entrada contém um inteiro N que indica a quantidade de casos de teste. Cada caso de teste consiste de dois valores A e B maiores que zero, cada um deles podendo ter até 1000 dígitos.

Saída
Para cada caso de entrada imprima uma mensagem indicando se o segundo valor encaixa no primeiro valor, confome exemplo abaixo.

 
Exemplo de Entrada	                                       Exemplo de Saída
4                                                                         encaixa
56234523485723854755454545478690 78690                                 nao encaixa
5434554 543
1243 1243                                                                  encaixa
54 64545454545454545454545454545454554                              nao encaixa



Código 

using System.IO;
using System.Linq;
using System; 


class desafio
{
    static void Main(string[] args)
    {
        int qt = int.Parse(Console.ReadLine());
        for (int i = 0; i < qt; i++)
        {
            string[] v = Console.ReadLine().Split(" ");
            string a = v[0];
            string b = v[1];
            if (a.EndsWith(b))
            {
                Console.WriteLine("encaixa");
            }
            else
            {
                Console.WriteLine("nao encaixa");
            }
        }
    }
}





Desafios de Código Básico C# - Pottencial
3 / 3 - Três Divisores

Desafio
Dado um inteiro n, retorne true se n tiver exatamente três divisores positivos. Caso contrário, retorne false. O inteiro m é um divisor de n, se existe um inteiro k tal que n = k * m. 

Entrada
O arquivo de entrada consiste em um inteiro n que será validada caso esteja sob as condições do desafio.

Saída
A saída consistirá em um tipo booleano: true ou false. Como nos exemplos a baixo:

Exemplo 1:

Entrada	             Saída
2	                   false
Explicação: 2 possui apenas dois divisores: 1 e 2.

Exemplo 2:

Entrada	                 Saída
4	                         true
Explicação: 4 tem três divisores: 1, 2 e 4.


Código
using System;
 
class Solution {
  public static void Main(string[] args)
    {
        int n = int.Parse(Console.ReadLine());
        int count = 0;
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                count++;
            }
        }
        Console.WriteLine(count == 3);
    }
}
